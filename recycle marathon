import pgzrun
import random

WIDTH = 1000
HEIGHT = 750
TITLE = "rycling marathon"
non_r=["battery","bottle","chipsimg","plastic bag"]
actors = []
levels = 5
cur_level = 1
animations = []
gameover = False
complete = False
def draw():   
    if gameover == True:
        screen.fill('black')
        screen.draw.text(str("gameover"),(75,75),color='red')
    elif complete==True:
        screen.draw.text(str("Well done"),(250,250),color='blue',fontsize=50 )
    else:
        screen.blit("eco backround",(0,0))
        for actor in actors:
            actor.draw() 

def game_over():
    global gameover
    gameover = True

def create_actors():  
    global actors, animations
    items = ["paper"]
    for i in range(cur_level):
        item = random.choice(non_r)
        items.append(item)
    for item in items:
        actor = Actor(item) 
        actors.append(actor)
    num_of_gaps = cur_level + 2
    gap_size = WIDTH/num_of_gaps
    actor_number = 1 
    for actor in actors:
       actor.pos = actor_number * gap_size, 50
       actor_number = actor_number + 1
    
    for actor in actors:
        animation = animate(actor,y = 750,duration = 5, on_finished = game_over )
        animations.append(animation)

def on_mouse_down(pos):
    global complete, actors, animations,cur_level
    for actor in actors:
        if actor.collidepoint(pos):
            if actor.image == "paper":
                cur_level = cur_level+1
                stop_animations()
                if cur_level > levels:
                    complete = True
                else:
                    actors = []
                    animations = []
                    create_actors()
            else:
                game_over()

def stop_animations():
    for animation in animations:
        if animation.running:
            animation.stop()
        




def update():
    pass 
create_actors()

pgzrun.go()
